** What is an array?
An array is a special variable aka data structure, which can hold more than one value:
** What are arrays useful for?
Arrays are used to store multiple variab4
** How do you access an array element?
const cars = ["Saab", "Volvo", "BMW"]; 
let car = cars[0];
name of the array with a [] third bracket to specify the index
** What are some useful array properties?
The real strength of JavaScript arrays are the built-in array properties and methods
cars.length   // Returns the number of elements
cars.sort()   // Sorts the array 
** What are some useful array methods?
Array length
Array toString()
Array at()
Array join()
Array pop()
Array push()
Array shift()
Array unshift()
Array delete()
Array concat()
Array copyWithin()
Array flat()
Array splice()
Array toSpliced()
Array slice()
** What are loops useful for?
Loops are all about doing the same thing over and over again. 
Often, the code will be slightly different each time round the loop, or the same code will run but with different variables.
** What is the break statement?
Stop a loops execution if certain conditions are met .
** What is the continue statement?
stop the loops execution for just the current iteration and moves to the next iteration
** What is the advantage of writing automated tests?
Automated test is a coding practice to check if the project/product/code you want to build 
performs according to standard 


How to Create an Array in JavaScript
const myArray = ["Cat", "Dogs", "Goat"];

Did you know that in JavaScript, an array is actually a type of object?
Cool Things You Can Do with Arrays

1. Find Out How Long an Array Is
myArray.length will tell you how many items are in the array.

2. Convert an Array to a String
myArray.toString() will turn the array into a string, with each item separated by commas.

3. Get a Specific Item from an Array
myArray.at(1) will give you the item at the 1st position (remember, counting starts from 0!).

4. Join All Items into a Single String
myArray.join() will combine all the items into a single string, with commas in between. But, you can also add your own separator, like this: myArray.join(" - ").

5. Remove the Last Item
myArray.pop() will delete the last item from the array.

6. Add a New Item to the End
myArray.push("Horse") will add a new item to the end of the array.

7. Remove the First Item
myArray.shift() will delete the first item from the array and move all the other items down.

8. Add a New Item to the Beginning
myArray.unshift("Tiger") will add a new item to the beginning of the array and move all the other items up.

9. Delete an Item at a Specific Position
myArray.delete(1) will delete the item at the 1st position, but be careful, as this can leave "holes" in the array. It's better to use pop() or shift() instead.

10. Combine Two Arrays
myArray.concat(anotherArray) will create a new array by combining two existing arrays.

11. Copy Items from One Array to Another
myArray.copyWithin(2, 4) will copy items from the 4th position to the 2nd position in the array.

12. Flatten a Multi-Dimensional Array
myArray.flat() will turn a multi-dimensional array into a single, flat array.

13. Add, Remove, or Replace Items
myArray.splice(1, 2, "New Item") can do three things: remove items, replace items, or add new items to the array.

14. Create a New Array with Sliced Items
myArray.slice(1, 3) will create a new array with items from the 1st to the 3rd position (exclusive).
